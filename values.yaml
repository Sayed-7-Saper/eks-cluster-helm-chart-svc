# Default values for myservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


replicaCount: 1
image:
  repository: ---repoURL---
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "staging-efa85897"
imagePullSecrets:
  - name: harbor-registery-secret
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
podAnnotations:
  reloader.stakater.com/auto: "true"
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 3000
ingress:
  enabled: true
  className: ""
  annotations: 
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  hosts:
    - host:
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
resources: {}
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
global:
  PORT: "3000"
  namespace: "nameSpace"
  DB_NAME: "DB_NAME"
  DATABASE_URL: "DB_URL"
  JWT_SECRET: "SoloSquad"
  MASTER_API_KEY: "..."
  NODE_ENV: "staging"
  MINIO_BUCKET_NAME: "name 0f bucket-files"
  MINIO_ACCESS_KEY: "...."
  MINIO_SECRET_KEY: "000"
  MINIO_END_POINT: "......io"
  EGYPT_TIME_ADJUSTMENT: "3"
  HASH_SECRET: "...."
  podAnnotations:
    reloader.stakater.com/auto: "true"
  deployment:
    POD_PORT: 80
    replicaCount: 1
    maxUnavailable: 1
    NODE_ENV: production
    NODE_TLS_REJECT_UNAUTHORIZED: 562
    SECURITY_CONTEXT:
      nodeUser: "nodeuser-scc"
    registeryconfig:
      name: "harbor-registery-secret"
      username: "robot-myservice"
      password: "..."
      email: "devops@...io"
      registry: "registry-az1....io"
deploymentRestart:
  kubectl:
    image:
      repository: bitnami/kubectl
      tag: latest
  schedule: '8 3 20 * *'
kubernetesClusterDomain: cluster.local
myservice:
  image:
    tag: staging-c339779a